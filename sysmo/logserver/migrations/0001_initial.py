# Generated by Django 4.1.7 on 2023-03-16 08:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('hostname', models.CharField(max_length=40)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('ruuid', models.CharField(max_length=40, unique=True, verbose_name='RUUID')),
                ('os', models.CharField(max_length=10, verbose_name='作業系統')),
                ('interface', models.JSONField(blank=True, null=True, verbose_name='網路介面')),
            ],
        ),
        migrations.CreateModel(
            name='MachineGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('cpupolicy', models.JSONField(blank=True, null=True, verbose_name='CPU策略')),
                ('mempolicy', models.JSONField(blank=True, null=True, verbose_name='MEM策略')),
                ('swappolicy', models.JSONField(blank=True, null=True, verbose_name='SWAP策略')),
                ('diskpolicy', models.JSONField(blank=True, null=True, verbose_name='Disk策略')),
                ('mgroup', models.ManyToManyField(blank=True, null=True, to='logserver.machinegroup', verbose_name='群組')),
            ],
        ),
        migrations.AddField(
            model_name='machinegroup',
            name='Gpolicy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='logserver.policy', verbose_name='策略'),
        ),
        migrations.AddField(
            model_name='machinegroup',
            name='machines',
            field=models.ManyToManyField(to='logserver.machine', verbose_name='機器'),
        ),
        migrations.AddField(
            model_name='machinegroup',
            name='users',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='使用者'),
        ),
        migrations.AddField(
            model_name='machine',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='logserver.machinegroup', verbose_name='群組'),
        ),
        migrations.AddField(
            model_name='machine',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='擁有者'),
        ),
    ]
